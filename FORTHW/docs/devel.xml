<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href='../tools/doc/devel.xsl'?>
<spf_devel>

<meta>
<revision>$Revision: 1.27 $</revision>
<date>$Date: 2009/01/20 20:45:35 $</date>
</meta>

<!-- Template
<lib><key></key><src></src><comment><en></en><ru></ru></comment></lib>
-->

<!-- 
Requirements : 
 <en></en> tags should always be present and positioned first in the list of children tags (e.g. in <comment>)
-->

<section id="net">
<name><en>Network</en><ru>Сеть</ru></name>
<lib><key>CreateSocket</key><src>~ac/lib/win/winsock/SOCKETS.F</src><comment><en>basic TCP/IP support</en><ru>базовая поддержка TCP/IP</ru></comment></lib>
<lib><key>SslInit</key><src>~ac/lib/win/winsock/ssl.f</src><comment><en>basic SSL/TLS support</en><ru>базовая поддержка SSL/TLS</ru></comment></lib>
<lib><key>SslClientSocket</key><src>~ac/lib/win/winsock/sockets_ssl.f</src><comment><en>SSL/TLS-server</en><ru>SSL/TLS сервер</ru></comment></lib>
<lib><key>SocketLine</key><src>~ac/lib/win/winsock/socketline2.f</src><comment><en>line-by-line buffered socket reading</en><ru>построчное буферизированное чтение из сокета</ru></comment></lib>
<lib><key>ReadFrom</key><src>~ac/lib/win/winsock/SOCKNAME.F</src><comment><en>UDP support</en><ru>поддержка UDP</ru></comment></lib>
<lib><key>fsockopen</key><src>~ac/lib/win/winsock/PSOCKET.F</src><comment><en>simplified interface to sockets</en><ru>упрощённый интерфейс к сокетам</ru></comment></lib>
<lib><key>ForEachIP</key><src>~ac/lib/win/winsock/foreach_ip.f</src><comment><en>performing given tasks for each IP host</en><ru>выполнение заданных действия для каждого IP хоста</ru></comment></lib>
<lib><key>SendDnsQuery</key><src>~ac/lib/win/winsock/dns_q.f</src><comment><en>querying DNS-servers</en><ru>DNS запросы</ru></comment></lib>
<lib><key>PutFileTr</key><src>~ac/lib/win/winsock/transmit.f</src><comment><en>high-speed file transmition in Windows</en><ru>высокоскоростная передача файлов в Windows</ru></comment></lib>
<lib><key>SnmpInit</key><src>~ac/lib/win/snmp/snmp.f</src><comment><en>SNMP support</en><ru>поддержка SNMP</ru></comment></lib>
<lib><key>GET-FILE-VIAPROXY</key><src>~ac/lib/lin/curl/curl.f</src><comment><en>cURL-wrapper - send/receive files via HTTP/FTP/etc</en><ru>cURL обёртка - получение/передача файлов по HTTP/FTP/etc</ru></comment>
 <link rel="wrap" href="http://curl.haxx.se/latest.cgi?curl=win32-devel-ssl">libcurl.dll</link>
</lib>
<lib><key>WEB-SERVER</key><src>~nn/lib/web/server.f</src><comment><en>simple HTTP-server</en><ru>простой сервер HTTP</ru></comment></lib>
<other><src>~nn/lib/net</src><comment><en>HTTP, POP3, FTP, etc</en><ru>HTTP, POP3, FTP, etc</ru></comment></other>
</section>


<section id="graphics">
<name><en>Graphics</en><ru>Графика</ru></name>
<lib><key>GLWindow</key><src>~ygrek/lib/joopengl/GLWindow.f</src><comment><en>OpenGL with joop</en><ru>OpenGL поверх joop</ru></comment></lib>
<lib><key>CGLWindow</key><src>~ygrek/lib/wfl/opengl/GLWindow.f</src><comment><en>OpenGL via WFL/hype3</en><ru>OpenGL поверх WFL/hype3</ru></comment></lib>
<lib><key>START-DRAW</key><src>~profit/misc/basicdraw.f</src><comment><en>Small framework for simple interactive drawing</en><ru>Небольшая обёртка для простой интерактивной графики</ru></comment></lib>
</section>

<section id="arc">
<name><en>Archives</en><ru>Архивы</ru></name>
<lib><key>gzip_write</key><src>~ac/lib/win/arc/gzip/zlib.f</src><comment><en>packing and unpacking GZip-streams</en><ru>упаковка и распаковка gzip-потоков</ru></comment>
 <link rel="wrap" href="http://www.forth.org.ru/ext/zlib.dll">zlib.dll (1.1.4)</link>
 <!-- seems zlib.f doesn't work with new versions of zlibwapi.dll
 link rel="wrap" href="http://www.winimage.com/zLibDll/">zlib.dll</link -->
</lib>
<lib>
 <key>zip-pack</key>
 <src>~profit/lib/7zip-dll.f</src>
 <comment><en>packing and unpacking zip/7zip archives</en><ru>упаковка и распаковка архивов zip/7zip</ru></comment>
 <link rel="wrap" href="http://www.csdinc.co.jp/archiver/lib/7-zip32.html#download">7-zip32.dll</link>
</lib>
<lib><key>zlib_compress</key><src>~ac/lib/lin/zlib/zlib.f</src><comment><en>zlib wrapper</en><ru>обёртка для zlib</ru></comment>
 <link rel="wrap" href="http://www.zlib.net">zlib1.dll libz.so.1</link>
</lib>
</section>

<section id="list">
<name><en>Linked lists</en><ru>Связные списки</ru></name>
<lib><key>ListNode</key><src>~day/joop/lib/list.f</src><comment><en>double-linked list</en><ru>двухсвязный список</ru></comment></lib>
<lib><key>AddNode</key><src>~ac/lib/list/STR_LIST.F</src><comment><en>linked list</en><ru>односвязный список</ru></comment></lib>
<lib><key>LINK,</key><src>~day/common/link.f</src><comment><en>static list (compiles in code area)</en><ru>статический список (компилируется в кодофай)</ru></comment></lib>
<lib><key>firstNode</key><src>~day/lib/staticlist.f</src><comment><en>double-linked list, pretty much words</en><ru>двухсвязный список, много слов</ru></comment></lib>
<lib><key>list+s</key><src>~pinka/lib/list_ext.f</src><comment><en>linked list </en><ru>односвязный список</ru></comment></lib>
<lib><key>cons</key><src>~ygrek/lib/list/core.f</src><comment><en>list of cons pairs, core words</en><ru>cons список, базовые слова</ru></comment></lib>
<lib><key>lst(</key><src>~ygrek/lib/list/ext.f</src><comment><en>constructing list with %[ 1 % 2 % 3 % ]%</en><ru>создание списков в виде %[ 1 % 2 % 3 % ]%</ru></comment></lib>
<lib><key>reduce-this</key><src>~ygrek/lib/list/more.f</src><comment><en>additional list operations</en><ru>дополнительный операции над списком</ru></comment></lib>
<lib><key>write-list</key><src>~ygrek/lib/list/write.f</src><comment><en>print list, also serialization suitable for EVALUATE</en><ru>распечатка, сериализация пригодная для EVALUATE</ru></comment></lib>
<lib><key>write-list</key><src>~ygrek/lib/list/all.f</src><comment><en>all words for cons pair lists</en><ru>все слова для cons списков</ru></comment></lib>
</section>

<section id="record">
<name><en>Records</en><ru>Структуры</ru></name>
<lib><key>STRUCT:</key><src>lib/ext/struct.f</src><comment><en>simple records</en><ru>простые структуры</ru></comment></lib>
<lib><key>f:</key><src>~af/lib/struct.f</src><comment><en>defining records with elements-functions </en><ru>структуры с элементами-функцями</ru></comment></lib>
<lib><key>f:</key><src>~af/lib/struct-t.f</src><comment><en>defining records with elements-functions in the temporary vocabulary</en><ru>структуры с элементами функциями во временном словаре</ru></comment></lib>
</section>

<section id="data">
<name><en>Data structures</en><ru>Структуры данных</ru></name>
<lib><key>Stack</key><src>~day/joop/lib/stack.f</src><comment><en>stack</en><ru>стек</ru></comment></lib>
<lib><key>New-Queue</key><src>~pinka/lib/queue_pr.f</src><comment><en>priority queue</en><ru>очередь с приоритетом</ru></comment></lib>
<lib><key>x.mask</key><src>~mlg/SrcLib/bitfield.f</src><comment><en>bit array</en><ru>битовый массив</ru></comment></lib>
<lib><key>new-set</key><src>~pinka/lib/charset.f</src><comment><en>ASCII characters set (as 256 bit array)</en><ru>множество ASCII (как 256-битный массив)</ru></comment></lib>
</section>

<section id="sort-n-search">
<name><en>Sorting and search</en><ru>Сортировка и поиск</ru></name>
<lib><key>HeapSort</key><src>~mlg/SrcLib/hsort.f</src><comment><en>heap sort</en><ru>пирамидальная сортировка</ru></comment></lib>
<lib><key>quick_sort</key><src>~pinka/samples/2003/common/QSORT.F</src><comment><en>"quick" sort</en><ru>"быстрая" сортировка</ru></comment></lib>
<lib><key>binary-search</key><src>~profit/lib/binary-search.f</src><comment><en>binary search</en><ru>двоичный поиск</ru></comment></lib>
</section>

<section id="techniques">
<name><en>Programming techniques</en><ru>Programming techniques</ru></name>
<lib><key>{</key><src>lib/ext/locals.f</src><comment><en>local variables</en><ru>локальные переменные</ru></comment></lib>
<lib><key>LAMBDA{</key><src>~pinka/lib/lambda.f</src><comment><en>:NONAME but in the compilation state</en><ru>:NONAME в режиме компиляции</ru></comment></lib>
<lib><key>(:</key><src>~yz/lib/inline.f</src><comment><en>lambda analogue</en><ru>аналог лямбда-конструкции</ru></comment></lib>
<lib><key>s(</key><src>~spn/se.f</src><comment><en>S-Expressions with garbage collector on top of SPF</en><ru>S-выражения со сборщиком мусора поверх SPF</ru></comment><link rel="doc" lang="ru" href="~spn/forth-fp.html" /></lib>
<lib><key>memoize:</key><src>~ygrek/lib/fun/memoize.f</src><comment><en>Memoize for (CELL -> CELL) functions</en><ru>Сохранение (кэширование) промежуточных значение при вызове функции вида (CELL -> CELL)</ru></comment><link rel="example" href="~ygrek/prog/fun/memoize.f" /></lib>
<lib><key>CONT</key><src>~profit/lib/bac4th.f</src><comment><en>backtracking</en><ru>перебор с возвратами</ru></comment>  <link rel="doc" href="~mlg/index.html#bacforth">~mlg/index.html#bacforth</link></lib>
<lib><key>axt=></key><src>~profit/lib/bac4th-closures.f</src><comment><en>Dynamically generated patches of code (closures)</en><ru>Динамически генерируемые отрезки кода (замыкания)</ru></comment></lib>
<lib><key>AsQName</key><src>~pinka/samples/2006/syntax/qname.f</src><comment><en>Syntax extension: treat `string as S" string"</en><ru>Расширение синтаксиса: распознавание `строка как S" строка"</ru></comment></lib>
<lib><key>AsQWord</key><src>~pinka/spf/quoted-word.f</src><comment><en>Syntax extension: 'c' is char code of c, 'word is xt of word, `string is S" string"</en><ru>Расширение синтаксиса: 'c' -- код символа c, 'word -- xt слова word, `string -- строка S" string"</ru></comment></lib>

</section>

<section id="debug">
<name><en>Debugging facilities</en><ru>Отладка</ru></name>
<lib><key>HeapEnum</key><src>~ac/lib/memory/heap_enum2.f</src><comment><en>enumerating allocated memory blocks on the heap</en><ru>перечисление блоков памяти выделенных на хипе</ru></comment></lib>
<lib><key>mem_stub</key><src>~day/lib/mem_sanity.f</src><comment><en>verifying FREE (via filling with template)</en><ru>проверка корректности удаления (с помощью заполнения шаблоном)</ru></comment></lib>
<lib><key>MemReport</key><src>~day/lib/memreport.f</src><comment><en>memory leakages checking with stack report (supports multithreading)</en><ru>отчёт об утечках памяти (поддерживает многопоточность)</ru></comment></lib>
<lib><key>ACCERT(</key><src>lib/ext/debug/accert.f</src><comment><en>conditional compilation</en><ru>условная компиляция</ru></comment></lib>
<lib><key>TRACER</key><src>lib/ext/debug/tracer.f</src><comment><en>detailed execution report</en><ru>подробный отчёт о выполнении</ru></comment></lib>
<lib><key>.elapsed</key><src>~af/lib/elapse.f</src><comment><en>word's run-time measurement</en><ru>замеры времени выполнения слова</ru></comment></lib>
<lib><key>.AllStatistic</key><src>~pinka/lib/tools/profiler.f</src><comment><en>word profiling (generates statistics for words and their run times)</en><ru>профилирование слов (выводит статистику о временах работы)</ru></comment></lib>
<lib><key>TESTCASES</key><src>~ygrek/lib/testcase.f</src><comment><en>TESTCASES by ~day</en></comment></lib>
<lib><key>/TEST</key><src>~profit/lib/testing.f</src><comment><en>marking tests in code</en><ru>отметка тестов в коде</ru></comment></lib>
</section>

<section id="math">
<name><en>Math</en><ru>Вычисления</ru></name>
<lib><key>F.</key><src>lib/include/float2.f</src><comment><en>floating point numbers</en><ru>числа с плавающей точкой</ru></comment></lib>
<lib><key>FR*</key><src>~nn/lib/fraction.f</src><comment><en>fractions' lib (enables fractions as '1/3')</en><ru>работа с дробями (в виде чисел вида: "1/3")</ru></comment></lib>
<lib><key>RATIO</key><src>~pinka/lib/BigMath.f</src><comment><en>rational fractions</en><ru>рациональные дроби</ru></comment></lib>
<lib><key>inv_normalDF</key><src>~ygrek/lib/math/inv_normal.f</src><comment><en>Normal distribution quantile</en><ru>Квантиль нормального распределения</ru></comment></lib>
<lib><key>InvertNumber</key><src>~ygrek/lib/math/gcd.f</src><comment><en>Greatest common divisor and inverse number by modulo</en><ru>Наибольший общий делитель и обратное число по модулю</ru></comment></lib>
</section>

<section id="random">
<name><en>Random numbers</en><ru>Случайные числа</ru></name>
<lib><key>RANDOM</key><src>lib/ext/rnd.f</src><comment><en>linear congruent generator</en><ru>линейно конгруэнтный генератор</ru></comment></lib>
<lib><key>RANDOM</key><src>~day/common/RND.F</src><comment><en>linear congruent generator </en><ru>линейно конгруэнтный генератор</ru></comment></lib>
<lib><key>RANDOM</key><src>~af/lib/random.f</src><comment><en>linear congruent generator</en><ru>линейно конгруэнтный генератор</ru></comment></lib>
<lib><key>GENRAND</key><src>~ygrek/lib/neilbawd/mersenne.f</src><comment><en>Mersenne twister - high-speed and quality RNG</en><ru>Mersenne twister - быстрый и качественный генератор</ru></comment></lib>
</section>

<section id="hash">
<name><en>Hashes</en><ru>Хэш-таблицы</ru></name>
<lib><key>new-hash</key><src>~pinka/lib/hash-table.f</src><comment><en>hash table</en><ru>хэш таблица</ru></comment></lib>
<lib><key>ListAllocate</key><src>~af/lib/simple_hash.f</src><comment><en>hashed string array</en><ru>хэшированный массив строк</ru></comment></lib>
<lib><key>HASH-TABLE</key><src>~yz/lib/hash.f</src><comment><en>hash table</en><ru>хэш таблица</ru></comment></lib>
<other><src>~pinka/samples/2003/test-hash/</src><comment><en>speed comparison of hash implementations</en><ru>сравнение скорости реализаций хэш таблиц</ru></comment></other>
<lib><key>HASH</key><src>~day/common/hash.f</src><comment><en>hash counting procedure</en><ru>процедура подсчёта хэш-значения</ru></comment></lib>
</section>

<section id="hash-func">
<name><en>Cryptographic hashes</en><ru>Хэши</ru></name>
<lib><key>MD5</key><src>~clf/MD5.F</src><comment><en>MD5</en></comment></lib>
<lib><key>MD5</key><src>~clf/md5-ts.f</src><comment><en>thread safe MD5</en></comment></lib>
<lib><key>MD5</key><src>lib/alg/md5-jz.f</src><comment><en>MD5</en></comment></lib>
</section>

<section id="compiletime-const">
<name><en>Compile-time constants</en><ru>Константы времени компиляции</ru></name>
<lib><key>LOAD-CONSTANTS</key><src>~yz/lib/const.f</src><comment><en>including constants - search via W: word prefix</en><ru>подключение констант - поиск через префиксное слово W:</ru></comment></lib>
<lib><key>ADD-CONST-VOC</key><src>lib/ext/const.f</src><comment><en>including constants - search via NOTFOUND</en><ru>подключение констант - поиск по NOTFOUND</ru></comment></lib>
<lib><key>BEGIN-CONST</key><src>~day/wincons/compile.f</src><comment><en>*.const files compiler</en><ru>компилятор *.const файлов</ru></comment></lib>
<other><src>~day/wincons/h2f.f</src><comment><en>extracting constants from C language header files</en><ru>выдирание констант из сишных заголовочных файлов</ru></comment></other>
<other><src>~yz/cons/</src><comment><en>precompiled constants for sql, commctrl, windows</en><ru>файлы констант для sql, commctrl, windows</ru></comment></other>
<other><src>~ygrek/lib/data/</src><comment><en>precompiled constants for libcurl, opengl, farplugin</en><ru>файлы констант для libcurl, opengl, farplugin</ru></comment></other>
</section>

<section id="ui">
<name><en>User interface</en><ru>Интерфейс пользователя</ru></name>
<lib>
  <key>WINDOWS...</key><src>~yz/lib/winlib.f</src>
  <comment>
    <en>WinLib - Windows GUI interface library. Stretches forms and controls on it. Specifying controls position without coordinates, only position in grid - know-how!</en>
    <ru>WinLib - библиотека интерфейса Windows. Умеет растягивать формы и контролы в ней. Задание вида окна без указания точных координат, с помощью размещения в сетке - ноу-хау!</ru>
  </comment>
  <link rel="doc" lang="ru" href="~yz/winlib.html">окна и общая функциональность</link>
  <link rel="doc" lang="ru" href="~yz/winctl.html">элементы управления</link>
  <link rel="doc" lang="ru" href="~yz/wincc.html">новые элементы управления</link> 
  <link rel="example" href="~yz/prog/winlib"/>
</lib>
<lib><key>through-control</key><src>~profit/lib/winlibex.f</src><comment><en>Some extensions to winlib</en><ru>Некоторые дополнения к winlib</ru></comment></lib>
<lib><key>FrameWindow</key><src>~day/joop/win/framewindow.f</src><comment><en>windows library based on joop</en><ru>библиотка интерфейса поверх joop</ru></comment></lib>
<other><src>~ac/lib/win/window</src><comment><en>simple and small implementation</en><ru>маленькая и простая реализация</ru></comment></other>
<lib>
 <key>WFL</key><src>~day/wfl/wfl.f</src>
 <comment><en>windows library based on hype3</en><ru>библиотека интерфейса поверх hype3</ru></comment>
 <link rel="example" href="~day/wfl/examples"/>
</lib>
<lib><key>AT-XY</key><src>~day/common/console.f</src><comment><en>minimum words for console</en><ru>минимальный набор слов для консоли</ru></comment></lib>
<lib><key>SetLocate</key><src>~pi/lib/console.f</src><comment><en>console support</en><ru>поддержка консоли</ru></comment></lib>
</section>

<section id="WinCOM">
<name><en>Windows COM</en></name> 
<lib><key>ComInit</key><src>~ac/lib/win/com/COM.F</src><comment><en>basic COM support</en><ru>базовая поддержка COM</ru></comment></lib>
<lib><key>Extends</key><src>~ac/lib/win/com/com_server.f</src><comment><en>COM-server</en><ru>COM сервер</ru></comment></lib>
</section>

<section id="services">
<name><en>System services</en><ru>Системные сервисы</ru></name>
<lib><key>CreateService</key><src>~ac/lib/win/service/SERVICE.F</src><comment><en>NT services</en><ru>сервисы NT</ru></comment></lib>
<lib><key>InstallService95</key><src>~ac/lib/win/service/service95.f</src><comment><en>"services" for Win9x/ME</en><ru>"сервисы" для Win9x/ME</ru></comment></lib>
</section>

<section id="datetime">
<name><en>Date and time</en><ru>Дата и время</ru></name>
<lib><key>DateTime#</key><src>~ac/lib/win/date/date-int.f</src><comment><en>date/time in different formats</en><ru>дата/время в разных форматах</ru></comment></lib>
<lib><key>UNIXDATE</key><src>~ac/lib/win/date/unixdate.f</src><comment><en>unixdate support</en><ru>поддержка unixdate</ru></comment></lib>
<lib><key>FileDateTime#</key><src>~ac/lib/win/file/filetime.f</src><comment><en>file date/time</en><ru>дата/время файловой системы</ru></comment></lib>
<lib><key>parse-date?</key><src>~ygrek/lib/spec/sdate.f</src><comment><en>S" Tue, 19 Dec 2006 19:55:16 +0300" dates' parsing</en><ru>разбор даты в виде S" Tue, 19 Dec 2006 19:55:16 +0300"</ru></comment></lib>
<lib><key>parse-num-unixdate</key><src>~ygrek/lib/spec/sdate2.f</src><comment><en>S" 2007-01-27T17:40:36+03:00" dates' parsing</en><ru>разбор даты в виде S" 2007-01-27T17:40:36+03:00"</ru></comment></lib>
<lib><key>DateTime>Num</key><src>~ygrek/lib/spec/unixdate.f</src><comment><en>convert unix timestamp into date and back</en><ru>преобразование unix timestamp в дату и обратно</ru></comment></lib>
</section>

<section id="db">
<name><en>Databases</en><ru>Базы данных</ru></name>
<lib><key>StartSQL</key><src>~yz/lib/ODBC.F</src><comment><en>ODBC, typed data</en><ru>ODBC, типизированные данные</ru></comment></lib>
<lib><key>StartSQL</key><src>~ac/lib/win/odbc/ODBC.F</src><comment><en>ODBC, all data as strings</en><ru>ODBC, все данные как строки</ru></comment></lib>
<lib><key>ExecSQLTxt</key><src>~pinka/lib/win/odbc/ODBC-txt.f</src><comment><en>DELETE and UPDATE support for Text File Driver</en><ru>поддержка DELETE и UPDATE для Text File Driver</ru></comment></lib>
<lib><key>db3_open</key><src>~ac/lib/lin/sql/sqlite3.f</src><comment><en>SQLite</en><ru>SQLite</ru></comment>
 <link rel="wrap" href="http://www.sqlite.org/download.html">sqlite3.dll</link>
</lib>
<lib><key>MyQuery</key><src>~day/lib/mysql.f</src><comment><en>MySQL wrapper</en><ru>MySQL обёртка</ru></comment>
 <link rel="wrap" href="http://dev.mysql.com/downloads/">libmysql.dll</link>
</lib>
</section>

<section id="threads">
<name><en>Processes, threads, etc</en><ru>Процессы, потоки, итп</ru></name>
<lib><key>StartApp</key><src>~ac/lib/win/process/process.f</src><comment><en>start applications from command line</en><ru>запуск приложений из командной строки</ru></comment></lib>
<lib><key>GetProcessACL</key><src>~ac/lib/win/access/nt_access.f</src><comment><en>access rights</en><ru>права доступа</ru></comment></lib>
<lib><key>IsapiRunExtension</key><src>~ac/lib/win/isapi/isapi.f</src><comment><en>support ISAPI-compatible extensions</en><ru>поддержка ISAPI-совместимых расширений</ru></comment></lib>
<lib><key>CREATE-CP</key><src>~ac/lib/win/thread/pool.f</src><comment><en>thread-pool in Win200x</en><ru>пул потоков в Win200x</ru></comment></lib>
<lib><key>CREATE-MUTEX</key><src>lib/win/mutex.f</src><comment><en>mutexes</en><ru>мутексы</ru></comment></lib>
<lib><key>ENTER-CS</key><src>~pinka/lib/multi/critical.f</src><comment><en>critical sections</en><ru>критические секции</ru></comment></lib>
<lib><key>WaitAll</key><src>~pinka/lib/multi/Synchr.f</src><comment><en>threads synchronization - "wait for single", "wait for all"</en><ru>синхронизация потоков - "wait for single", "wait for all"</ru></comment></lib>
</section>

<section id="ini-registry">
<name><en>Windows registry and ini-files</en><ru>Реестр Windows</ru></name>
<lib><key>RG_CreateKey</key><src>~ac/lib/win/registry2.f</src><comment><en>Windows registry</en><ru>реестр Windows</ru></comment></lib> 
<lib><key>IniFile@</key><src>~ac/lib/win/ini.f</src><comment><en>ini-files</en><ru>ini-файлы</ru></comment></lib>
</section>

<section id="str">
<name><en>Strings</en><ru>Строки</ru></name>
<lib><key>STR@</key><src>~ac/lib/str5.f</src><comment><en>dynamic strings</en><ru>динамические строки</ru></comment></lib>
<lib><key>BNF</key><src>~ac/lib/transl/BNF.F</src><comment><en>basic BNF data types</en><ru>основные типы данных BNF</ru></comment></lib>
<lib><key>CHECK-SET</key><src>~day/common/sbnf.f</src><comment><en>simple BNF parser</en><ru>простой BNF парсер</ru></comment></lib>
<lib><key>WildCMP-U</key><src>~pinka/lib/mask.f</src><comment><en>comparing string and wildcard mask</en><ru>сравнение строки с маской</ru></comment></lib>
<lib><key>ULIKE</key><src>~pinka/lib/like.f</src><comment><en>comparing string and wildcard mask</en><ru>сравнение строки и маски</ru></comment></lib>
<lib><key>PcreMatch</key><src>~ac/lib/string/regexp.f</src><comment><en>PCRE wrapper</en><ru>PCRE обёртка</ru></comment>
 <link rel="wrap" href="ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/">pcre.dll</link>
</lib>
<lib><key>BregexpMatch</key><src>~ac/lib/string/bregexp/bregexp.f</src><comment><en>bregexp.dll wrapper</en><ru>bregexp.dll обёртка</ru></comment>
 <link rel="wrap" href="http://www.hi-ho.ne.jp/babaq/eng/bregexp.html">bregexp.dll</link>
</lib>
<lib><key>UPPERCASE</key><src>~ac/lib/string/uppercase.f</src><comment><en>uppercase conversion</en><ru>перевод в верхний регистр</ru></comment></lib>
<lib><key>COMPARE-U</key><src>~ac/lib/string/compare-u.f</src><comment><en>case-ignorant comparison</en><ru>сравнение без учёта регистра</ru></comment></lib>
<lib><key>GetParam</key><src>~ac/lib/string/get_params.f</src><comment><en>URL-parameters string parser</en><ru>рахбор строки URL-параметров</ru></comment></lib>
<lib><key>SPLIT-</key><src>~pinka/samples/2005/lib/split.f</src><comment><en>dividing string on substring, "inplace" replacing</en><ru>разбиение строки по подстроке, замена "на месте"</ru></comment></lib>
<lib><key>replace-str-</key><src>~pinka/samples/2005/lib/replace-str.f</src><comment><en>replacing in strings</en><ru>замена в строках</ru></comment></lib>
<lib><key>FINE-HEAD</key><src>~pinka/samples/2005/lib/split-white.f</src><comment><en>removing spaces at string bounds</en><ru>удаление пробелов по краям строк</ru></comment></lib>
<lib><key>TYPE>STR</key><src>~ygrek/lib/typestr.f</src><comment><en>redirecting whole TYPE output to string</en><ru>перенаправление всего TYPE вывода в строку</ru></comment></lib>
<lib><key>split</key><src>~profit/lib/bac4th-str.f</src><comment><en>strings operations via bac4th with automatic memory management</en><ru>строковые операции на bac4th с автоматическим управлением памятью</ru></comment></lib>
<lib><key>CEQUAL</key><src>~pinka/spf/string-equal.f</src><comment><en>CEQUAL ( addr1 u1 addr2 u2 -- ? )</en></comment></lib>
<lib><key>re_match?</key><src>~ygrek/lib/re/re.f</src><comment><en>POSIX regular expressions, native implementation</en><ru>регулярные выражения POSIX, форт-реализация</ru></comment></lib>
</section>

<section id="files">
<name><en>Files</en><ru>Файлы</ru></name>
<lib><key>OPEN-FILE-SHARED-DELETE</key><src>~ac/lib/win/file/share-delete.f</src><comment><en>opening file with "light" shareable access</en><ru>открытие файла с "мягким" совместным доступом</ru></comment></lib>
<lib><key>LAY-PATH</key><src>~pinka/samples/2005/lib/lay-path.f</src><comment><en>creation of path directories</en><ru>создание пути каталогов</ru></comment></lib>
<lib><key>ATTACH</key><src>~pinka/samples/2005/lib/append-file.f</src><comment><en>safe writing to file</en><ru>безопасная запись в файл</ru></comment></lib>
<lib><key>SPEAK-WITH</key><src>~pinka/samples/2005/ext/tank.f</src><comment><en>controlling output stream, executing xt with output to file redirection</en><ru>контроль потока вывода, выполнение xt с перенаправлением вывода в файл</ru></comment></lib>
</section>

<section id="xml">
<name><en>XML</en></name>
<lib><key>XML_Evaluate</key><src>~ac/lib/lin/xml/expat.f</src><comment><en>XML via libexpat</en></comment>
 <link rel="wrap" href="http://sourceforge.net/projects/expat/">libexpat.dll</link>
</lib>
<lib>
 <key>XML_READ_DOC</key><src>~ac/lib/lin/xml/xml.f</src><comment><en>XML via libxml2 </en></comment>
 <link rel="wrap" href="http://zlatkovic.com/pub/libxml/">libxml2.dll</link>
</lib>
<lib><key>XSLT</key><src>~ac/lib/lin/xml/xslt.f</src><comment><en>XSLT via libxslt </en></comment>
 <link rel="wrap" href="http://zlatkovic.com/pub/libxml/">libxslt.dll</link>
</lib>
<lib><key>Tidy</key><src>~ac/lib/lin/tidy/tidy.f</src><comment><en>Wrapper for tidy.dll</en></comment>
 <link rel="wrap" href="http://dev.int64.org/tidy.html">tidy.dll</link>
</lib>
</section>

<section id="oop">
<name><en>OOP extensions</en><ru>ООП расширения</ru></name>
<lib><key>CLASS:</key><src>~day/joop/oop.f</src><comment><en>just oop with great pile of examples</en><ru>just oop с кучей примеров</ru></comment></lib>
<lib><key>CLASS:</key><src>~af/mc/microclass.f</src><comment><en>microclass</en></comment></lib>
<lib><key>CLASS:</key><src>~day/mc/microclass.f</src><comment><en>microclass</en></comment></lib>
<lib><key>CLASS</key><src>~day/hype3/hype3.f</src><comment><en>Hype 3</en></comment>
  <link rel="doc" lang="ru" href="~day/hype3/reference.pdf">reference</link>
</lib>
</section>

<section id="vocs">
<name><en>Vocabularies</en><ru>Словари</ru></name>
<lib><key>InVoc{</key><src>~ac/lib/transl/vocab.f</src><comment><en>shortening vocabulary manipulations (MODULE: analogue)</en><ru>упрощение манипуляций со словарями (аналог MODULE:)</ru></comment></lib>
<lib><key>ForEach</key><src>~ac/lib/ns/iterators.f</src><comment><en>iterators for context vocabularies</en><ru>итераторы для контекстных словарей</ru></comment></lib>
<lib><key>ForEach-Word</key><src>~pinka/lib/Words.f</src><comment><en>ForEach-Word</en></comment></lib>
<lib><key>QuickSWL-Support</key><src>~pinka/spf/quick-swl2.f</src><comment><en>Quick Search Wordlist (due to hashing)</en><ru>быстрый поиск по словарю (за счёт хэширования)</ru></comment></lib>
<lib><key>DLOPEN</key><src>~ac/lib/ns/dlopen.f</src><comment><en>unix-compatible way of loading WindowsDLL/UnixSO</en><ru>unix-совместимый способ подключения WindowsDLL/UnixSO</ru></comment></lib>
<other><src>~ac/lib/ns/</src><comment><en>mapping external tree structures on forth wordlist (XML, files and dirs, sqlite)</en><ru>отображение внешних древовидных структур на форт-словарь (на XML, на структуру файлов, на БД sqlite)</ru></comment></other>
</section>

<section id="mem">
<name><en>Memory</en><ru>Память</ru></name>
<lib><key>STACK_MEM</key><src>~ac/lib/memory/mem_stack.f</src><comment><en>"stack"-way memory allocation</en><ru>"стековое" управление памятью</ru></comment></lib>
<lib><key>LowMemory?</key><src>~ac/lib/memory/low_memory.f</src><comment><en>controlling extra memory consumption</en><ru>контроль за чрезмерным потреблением памяти</ru></comment></lib>
<lib><key>PAllocSupport</key><src>~af/lib/pallocate.f</src><comment><en>allocating memory in the global process space (shareable between threads)</en><ru>выделение памяти в глобальном хипе процесса (разделяемом между потоками)</ru></comment></lib>
<lib><key>LOCALLOC</key><src>~mak/LALLOC.F</src><comment><en>local array allocation (on the return stack)</en><ru>локальный массив (на стеке возвратов)</ru></comment></lib>
<lib><key>ALLOCATE2</key><src>~pinka/spf/mem2.f</src><comment><en>switching memory words for process and thread heap</en><ru>слова для переключение памяти процсса и потока</ru></comment></lib>
<lib><key>LoadDelphiMM</key><src>~ss/lib/borlndmm.f</src><comment><en>Borland memory manager</en><ru>менеджер памяти Borland</ru></comment></lib>
<lib><key>INIT-TASK-VALUES</key><src>~ss/lib/task-values.f</src><comment><en>global thread variables</en><ru>глобальные переменные потока</ru></comment></lib>
<lib><key>PROTECT-RETURN-STACK</key><src>~ss/ext/stack-guard.f</src><comment><en>protecting return stack from erasing with data stack</en><ru>защита стека возвратов от затирания стеком данных</ru></comment></lib>
<lib><key>GMEM</key><src>~yz/lib/gmem.f</src><comment><en>global memory shareable between threads</en><ru>глобальная память разделяемая между потоками</ru></comment></lib>
</section>

<section id="misc">
<name><en>Miscellaneous</en><ru>Разное</ru></name>
<lib><key>CONST</key><src>~micro/lib/const/CONST.F</src><comment><en>constants enumeration</en><ru>перечисление констант</ru></comment></lib>
<lib><key>ENUM</key><src>~ygrek/lib/enum.f</src><comment><en>enumerate groups of similar words</en><ru>перечисление групп подобных слов</ru></comment></lib>
<lib><key>enqueueNOTFOUND</key><src>~pinka/samples/2006/core/trans/nf-ext.f</src><comment><en>extending translators (NOTFOUND)</en><ru>расширение транслятора (NOTFOUND)</ru></comment></lib>
<lib><key>StringToCB</key><src>~day/lib/clipboard.f</src><comment><en>read/write strings from Windows-Clipboard</en><ru>Чтение/запись строковых значений из буфера обмена Windows</ru></comment></lib>
<!-- <lib><key>JsInit</key><src>~ac/lib/lin/lang/js_binding.f</src><comment><en>Wrapper for Mozilla's js-engine</en><ru>Обёртка для js-движка от Mozilla</ru></comment>
<link rel="wrap" href="http://www.mozilla.org/download.html">nspr4.dll</link>
<link rel="wrap" href="http://www.mozilla.org/download.html">js3250.dll</link>
</lib>
https://sourceforge.net/tracker/?func=detail&atid=117919&aid=1815133&group_id=17919 -->
</section>


<section id="encoding">
<name><en>Encodings</en><ru>Кодировки</ru></name>
<lib><key>UNICODE>UTF8</key><src>~ac/lib/win/com/COM.F</src><comment><en>convertation from Unicode (2 byte) to UTF-8 and reverse</en><ru>преобразование из Unicode (2 байта) в UTF-8 и обратно</ru></comment></lib>
<lib><key>unicode></key><src>~day/lib/unicode.f</src><comment><en>convertation from Unicode to ANSI and reverse</en><ru>преобразование из Unicode в ANSI и обратно</ru></comment></lib>
<lib><key>utf8Decode</key><src>~profit/lib/utf8.f</src><comment><en>convertation from UTF-8 to Unicode (2 byte). Doesn't use WINAPI's functions</en><ru>преобразование из UTF-8 в Unicode (2 байта), без использования WINAPI функций</ru></comment></lib>
<lib><key>debase64</key><src>~ac/lib/string/CONV.F</src><comment><en>base64, win-koi, urlencode etc.</en><ru>base64, win-koi, urlencode, etc</ru></comment></lib>
<lib><key>iconv:</key><src>~ygrek/lib/iconv.f</src><comment><en>libiconv wrapper</en><ru>обёртка для libiconv</ru></comment>
 <link rel="wrap" href="http://www.zlatkovic.com/pub/libxml/">libiconv.dll</link>
</lib>
<lib><key>ICONV</key><src>~ac/lib/lin/iconv/iconv.f</src><comment><en>libiconv wrapper</en><ru>обёртка для libiconv</ru></comment></lib>
<!--limk rel="wrap">iconv</link-->
</section>

</spf_devel>
